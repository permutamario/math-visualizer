"use strict";(self.webpackChunkmath_visualizer_react=self.webpackChunkmath_visualizer_react||[]).push([[934],{934:(e,a,t)=>{t.r(a),t.d(a,{default:()=>s});var r=t(8239);class s extends r.A{constructor(e){super(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Cyclohedron")}addFamilyParameters(){}calculateVertices(){const e=[[0,1,2,3],[0,1,3,2],[0,2,1,2],[0,2,3,1],[0,3,2,1],[1,0,2,3],[1,0,3,2],[1,2,0,2],[1,2,3,0],[1,3,2,0],[2,0,1,3],[2,0,2,1],[2,1,0,3],[2,1,2,0],[2,3,0,1],[2,3,1,0],[3,0,1,2],[3,1,0,2],[3,2,0,1],[3,2,1,0]].map((e=>{const a=e.reduce(((e,a)=>e+a),0)/4;return e.map((e=>e-a))})),a=(e,a)=>e.reduce(((e,t,r)=>e+t*a[r]),0),t=(e,a)=>e.map((e=>e*a)),r=[];[[1,-1,0,0],[0,1,-1,0],[0,0,1,-1]].forEach((e=>{let s=[...e];r.forEach((e=>{const r=a(s,e);s=((e,a)=>e.map(((e,t)=>e-a[t])))(s,t(e,r))}));const c=(e=>Math.hypot(...e))(s);c>1e-8&&r.push(t(s,1/c))}));const s=e.map((e=>r.map((t=>a(e,t))))),c=this.plugin.getParameter("size")||1;return s.map((e=>e.map((e=>e*c))))}}}}]);
//# sourceMappingURL=934.ffe31d60.chunk.js.map