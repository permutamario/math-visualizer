"use strict";(self.webpackChunkmath_visualizer_react=self.webpackChunkmath_visualizer_react||[]).push([[796],{9796:(t,e,s)=>{s.r(e),s.d(e,{default:()=>r});var o=s(8239);class r extends o.A{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Root Polytope"),this.types=[{value:"A3",label:"Type A\u2083"},{value:"B3",label:"Type B\u2083"},{value:"C3",label:"Type C\u2083"},{value:"D3",label:"Type D\u2083"},{value:"H3",label:"Type H\u2083"}],this.currentType="A3"}addFamilyParameters(){this.plugin.addDropdown("rootSystemType","Root System","A3",this.types,"structural")}calculateVertices(){let t;switch(this.currentType=this.plugin.getParameter("rootSystemType")||"A3",this.currentType){case"B3":t=this.buildTypeB3();break;case"C3":t=this.buildTypeC3();break;case"D3":t=this.buildTypeD3();break;case"H3":t=this.buildTypeH3();break;default:t=this.buildTypeA3()}const e=this.plugin.getParameter("size")||1;return t.map((t=>t.map((t=>t*e))))}buildTypeA3(){const t=[];for(let s=0;s<4;s++)for(let e=s+1;e<4;e++){const o=[0,0,0,0];o[s]=1,o[e]=-1,t.push(o),t.push(o.map((t=>-t)))}const e=this.orthonormalBasis([[1,-1,0,0],[0,1,-1,0],[0,0,1,-1]]);return t.map((t=>e.map((e=>this.dot(t,e)))))}buildTypeB3(){const t=[];for(let e=0;e<3;e++){const s=[0,0,0];s[e]=1,t.push([...s]),t.push(s.map((t=>-t)))}for(let e=0;e<3;e++)for(let s=e+1;s<3;s++)for(const o of[-1,1])for(const r of[-1,1]){const l=[0,0,0];l[e]=o,l[s]=r,t.push(l)}return t}buildTypeC3(){const t=[];for(let e=0;e<3;e++){const s=[0,0,0];s[e]=2,t.push([...s]),t.push(s.map((t=>-t)))}for(let e=0;e<3;e++)for(let s=e+1;s<3;s++)for(const o of[-1,1])for(const r of[-1,1]){const l=[0,0,0];l[e]=o,l[s]=r,t.push(l)}for(let e=0;e<3;e++){const s=[0,0,0];s[e]=1,t.push([...s]),t.push(s.map((t=>-t)))}return t}buildTypeD3(){const t=[];for(let e=0;e<3;e++)for(let s=e+1;s<3;s++)for(const o of[-1,1])for(const r of[-1,1]){const l=[0,0,0];l[e]=o,l[s]=r,t.push(l)}return t}buildTypeH3(){const t=(1+Math.sqrt(5))/2,e=[[0,1,t],[0,-1,t],[0,1,-t],[0,-1,-t],[1,t,0],[-1,t,0],[1,-t,0],[-1,-t,0],[t,0,1],[-t,0,1],[t,0,-1],[-t,0,-1]];let s=1/0;for(let r=0;r<e.length;r++)for(let t=r+1;t<e.length;t++){const o=e[r][0]-e[t][0],l=e[r][1]-e[t][1],a=e[r][2]-e[t][2],u=Math.hypot(o,l,a);u>1e-6&&u<s&&(s=u)}const o=[];for(let r=0;r<e.length;r++)for(let t=r+1;t<e.length;t++){const l=e[r],a=e[t],u=l[0]-a[0],p=l[1]-a[1],n=l[2]-a[2],h=Math.hypot(u,p,n);Math.abs(h-s)<1e-6&&o.push([(l[0]+a[0])/2,(l[1]+a[1])/2,(l[2]+a[2])/2])}return o}dot(t,e){return t.reduce(((t,s,o)=>t+s*e[o]),0)}sub(t,e){return t.map(((t,s)=>t-e[s]))}scale(t,e){return t.map((t=>t*e))}norm(t){return Math.hypot(...t)}orthonormalBasis(t){const e=[];for(let s of t){let t=[...s];for(let s of e)t=this.sub(t,this.scale(s,this.dot(t,s)));const o=this.norm(t);o>1e-8&&e.push(this.scale(t,1/o))}return e}}}}]);
//# sourceMappingURL=796.63fa0d45.chunk.js.map