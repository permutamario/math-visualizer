{"version":3,"file":"static/js/629.91677e81.chunk.js","mappings":"yKAIe,MAAMA,UAAqBC,EAAAA,EACxCC,WAAAA,CAAYC,GACVC,MAAMD,EADgBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,eAG3B,CAKAG,mBAAAA,GACE,CAOFC,iBAAAA,GAEE,MAGMC,EAAK,CACT,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GACxC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAEzBC,EAAK,CACT,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GACxC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAIpCC,EAAQ,GAbH,CACT,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAavCC,SAAQC,GAAMJ,EAAGG,SAAQE,GAAMH,EAAMI,KAAK,CAC3CF,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,SAIb,MAAME,EAAW,GACjBL,EAAMC,SAAQK,GAAOP,EAAGE,SAAQM,GAAMF,EAASD,KAAK,CAClDE,EAAI,GAAKC,EAAG,GACZD,EAAI,GAAKC,EAAG,GACZD,EAAI,GAAKC,EAAG,SAId,MAAMC,EAAOC,KAAKlB,OAAOmB,aAAa,SAAW,EACjD,OAAOL,EAASM,KAAIC,GAAKA,EAAED,KAAIE,GAASA,EAAQL,EAAO,MACzD,E","sources":["lib/plugins/polytope-viewer/families/Stellahedron.js"],"sourcesContent":["// src/plugins/polytope-viewer/families/Stellahedron.js\n\nimport PolytopeFamily from '../PolytopeFamily.js';\n\nexport default class Stellahedron extends PolytopeFamily {\n  constructor(plugin, name = \"Stellahedron\") {\n    super(plugin, name);\n    // No additional parameters needed\n  }\n  \n  /**\n   * Add parameters specific to Stellahedron\n   */\n  addFamilyParameters() {\n    // Just use the default size parameter from the framework\n  }\n  \n  /**\n   * Calculate vertices for the Stellahedron\n   * Based on Minkowski sums of unit simplices\n   */\n  calculateVertices() {\n    // Define the unit simplices\n    const u1 = [\n      [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1]\n    ];\n    const u2 = [\n      [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1],\n      [1, 1, 0], [1, 0, 1], [0, 1, 1]\n    ];\n    const u3 = [\n      [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1],\n      [1, 1, 0], [1, 0, 1], [0, 1, 1], [1, 1, 1]\n    ];\n    \n    // Minkowski sum u1 + u2\n    const sum12 = [];\n    u1.forEach(v1 => u2.forEach(v2 => sum12.push([\n      v1[0] + v2[0],\n      v1[1] + v2[1],\n      v1[2] + v2[2]\n    ])));\n    \n    // Then + u3\n    const vertices = [];\n    sum12.forEach(v12 => u3.forEach(v3 => vertices.push([\n      v12[0] + v3[0],\n      v12[1] + v3[1],\n      v12[2] + v3[2]\n    ])));\n    \n    // Apply size factor from parameters\n    const size = this.plugin.getParameter('size') || 1.0;\n    return vertices.map(v => v.map(coord => coord * size * 0.1)); // Scale down by 0.1 because it's big\n  }\n}"],"names":["Stellahedron","PolytopeFamily","constructor","plugin","super","arguments","length","undefined","addFamilyParameters","calculateVertices","u2","u3","sum12","forEach","v1","v2","push","vertices","v12","v3","size","this","getParameter","map","v","coord"],"sourceRoot":""}